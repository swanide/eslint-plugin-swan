#!/usr/bin/env node

const {execSync} = require('child_process');
const path = require('path');

const tryLoadEslint = () => {
    // use eslint module path in env
    if (process.env.ESLINT_MODULE_PATH) {
        const module = require(eslintModulePath);
        return (module.default || module).ESLint;
    }

    let globalNpmModule = '';
    let globalYarnModule = '';

    try {
        globalNpmModule = execSync('npm config get prefix -g', {
            encoding: 'utf8',
        }).trim();
    }
    catch (e) {
    }

    try {
        globalYarnModule = execSync('npm config get prefix -g', {
            encoding: 'utf8',
        }).trim();
    }
    catch (e) {
    }

    let eslintModulePath = '';
    try {
        const eslintPkgPath = require.resolve('eslint/package.json', {
            paths: [
                process.cwd(),
                `${globalNpmModule}/lib`,
                globalYarnModule,
            ].filter(p => p.length),
        });
        eslintModulePath = path.dirname(eslintPkgPath);
    }
    catch (e) {
    }

    if (!eslintModulePath) {
        throw new Error('no local or global eslint installed!');
    }

    // set global eslint module path
    process.env.ESLINT_MODULE_PATH = eslintModulePath;
    const module = require(eslintModulePath);
    return (module.default || module).ESLint;
};

async function main(pattern) {
    if (pattern === '-h' || pattern === '--help') {
        console.log('use swan-lint to lint swan files.');
        console.log('Example:');
        console.log('  swan-lint .');
        console.log('  SWAN_LINT_CONFIG=base swan-lint ./pages');
        console.log('  SWAN_LINT_CONFIG=recommended swan-lint');
        console.log('  SWAN_LINT_CONFIG=strict swan-lint');
        console.log();
        return;
    }

    const ESLint = tryLoadEslint();
    const swanPlugin = require('../');

    const eslint = new ESLint({
        useEslintrc: false,
        baseConfig: swanPlugin.configs[process.env.SWAN_LINT_CONFIG || 'recommended'],
        extensions: ['.swan'],
        plugins: {
            '@swanide/eslint-plugin-swan': swanPlugin,
        },
    });
    const results = await eslint.lintFiles(pattern);
    const formatter = await eslint.loadFormatter('stylish');
    const resultText = formatter.format(results);
    console.log(resultText);
}

main(process.argv[2] || process.cwd());